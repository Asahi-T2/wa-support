
var data = [
    
    {
        title: "RPA、RDAとは(tutorial)",
        content: "[このページではRPAに関する基礎知識の学習を行います。 RPAとは RPAとは「Robotic Process Automation」の略語で、ルールエンジンなどの認知技術を用いることで、ロボットがＰＣ操作の代行を行い、業務効率化や人材不足への対応を図る取り組みです。 RPAは、基本的に管理用のサーバーが存在し、そこからロボットの管理制御を行います。 RDAとは RDAとは「Robotic Desktop Automation」の略語で、基本的な概念はRPAと同様ですが、基本的にはサーバーが存在せず、各クライアントPC上にインストールを行い、そこで開発、実行を行います。 AIとの違い RPAはAIと違い、学習機能がなく、あらかじめ設定したルールに基づき、すべてのプロセスを処理します。（工業用のロボットと同じイメージです。） そのため、対象とする業務には、作業の標準化や手順の明確化を行う必要があります。 !!! Tip AIは判断が出来る技術として、語られることが多いですが、実際には確率論としての判断のため、AIを用いた場合でも、最終的には人の判断が必須となります。 マクロ(VBA)との違い マクロは主にEXCELなどのMicrosoft Office製品を中心とした操作を得意としています。 一方RPAは、EXCELなどのMicrosoft Office製品の操作に加え、他のデスクトップアプリケーションやWebアプリケーションの操作を行うことも可能です。 そのため、従来の手法では集計をEXCELマクロで行い、結果を人が転記していたような業務も、全てRPAで完結することが可能となります。 RPAに適した業務 RPAはルールに基づいた業務を得意分野としているため、定型的な業務（EXCELからシステムへの転記作業、〆処理などの月次処理等）が適していると言えます。 AI技術と組み合わせることで、銀行や自治体での帳票OCRや顔認証（警備）などにも利用されています。 !!! Note RPAとAIを組み合わせた「RPAI」というワードを2019年にソフトバンク社が提唱しました。 これらの組み合わせが、これからのデファクトスタンダードとなるでしょう。 RPAに適さない業務 手順が統一できない業務、センスが求められる業務などはRPAには適しません。 また、あまりにも判断条件が多いような場合は、開発工数・メンテナンス性などを考えると、あまり適した業務ではありません。 そういった業務は、将来においてもAIに代替が難しい(専用AIが必要)と思われるため、業務の見直しや、これまでと同様に人が携わっていく必要があります。]",
        url: "http://A181102:2015/tutorial/rpa_rda/"
    },
    
    {
        title: "WinAutomationとは(tutorial)",
        content: "[WinAutomationとは WinAutomationは、日本ではまだメジャーではありませんが、世界中の多くの企業で利用されているRDAプラットフォームです。 開発元について 2005年にギリシャにて設立 全世界8000社を超える顧客 マイクロソフト ゴールドパートナー 2017年ガートナー社マーケット・ガイド代表ベンダー（RPA分野） 主力製品 WinAutomation サーバーレスタイプのデスクトップオートメーションソフトウェア ProcessRobot ロードバランサ―を搭載した大規模向けRPAプラットフォーム 主なパートナー企業 WinAutomationの主な機能 メールトリガー、ファイルトリガーなど様々なトリガーによるロボットの実行 スケジュールによるロボットの実行 マクロレコーダー、Webレコーダーによる処理の自動記録 画像認識＋UI Spyによる多彩で確実なアプリケーションの操作 カスタムCSSによる動的サイトの操作 実行ログの自動記録 エラー発生時のスクリーンショット保存機能 他のRDA(RPA)との比較 Process Robot(RPA)へのアップグレードが可能 複数プロセスの同時操作が可能 同一プロセスの同時実行制御（キュー）が可能 画像処理にはない高速処理を実現 WebAPIにノンプログラミングで直接アクセスすることが可能 VBScript、javascript、Powershell等との連携が可能]",
        url: "http://A181102:2015/tutorial/whats_winautomation/"
    },
    
    {
        title: "セットアップ手順(tutorial)",
        content: "[セットアップ手順 WinAutomationの利用にあたり、まずはインストールおよびライセンス認証を行いましょう。 インストール インストーラーを管理者ユーザーで実行してください。 [Microsoft Visual C&#43;&#43; Runtime 14.0]のインストールを行います。 [Next]ボタンをクリックします。 [Microsoft Visual C&#43;&#43; Runtime 14.0]が、既にインストールされている場合は、この画面は表示されません。 インストールが進行します。 [WinAutomation]のインストールを行います。 [Next]ボタンをクリックします。 [I accept the terms of the license agreement]にチェックし、[Next]ボタンをクリックします。 [Next]ボタンをクリックします。 [Add desktop shortcut]にチェックし、[Next]ボタンをクリックします。 [Next]ボタンをクリックします。 Mozilla FirefoxまたはGoogle Chromeをブラウザとして使用する場合は、チェックを入れてください。 [Next]ボタンをクリックします。 インストールが進行します。 [Finish]ボタンをクリックします。 ライセンス認証 WinAutomationを起動します。 [I HAVE A LICENCE KEY]を起動します。 トライアルの場合は、[OR, CONTINUE EVALUATION]を選択してください。 ライセンスキーを入力し、[OK]ボタンをクリックします。]",
        url: "http://A181102:2015/tutorial/setup/"
    },
    
    {
        title: "コンソールの操作方法(tutorial)",
        content: "[トリガーの設定、ログの参照、Process Designerの起動など、WinAutomationの操作は全てWinAutomation Consoleを用いて行います。 ここではWinAutomation Consoleの基本操作を学びましょう。 起動とプロセスの実行 デスクトップのショートカットからWinAutomation Consoleを起動してください。 デスクトップにショートカットがない場合は、プログラム一覧から起動するか、次のパスを実行してください。 C:\Program Files\WinAutomation\WinAutomation.Console.exe Examples &amp;gt; 01 - Beginnerフォルダを選択してください。 01 - Run Calculatorプロセスを選択し、Startを行ってください。 プロセスが起動するのを確認します。 表示されたメッセージを閉じ、電卓が起動するのを確認します。 プロセスの作成 どのフォルダに作成したいかを選択し、New Processボタンをクリックします。 プロセスの名称と、どのモードで作成を開始するかを選択します。 プロセスタブの概要 プロセスの作成、プロセスのプロパティ設定、プロセス手動実行などを行います。 &amp;nbsp;&amp;nbsp;&amp;nbsp;※ 青太字はよく使う機能を表しています ※ Create Group 新しいプロセスの作成、新しいフォルダーの作成、プロセスのインポート、エクスポートなどを行います。 New Process 選択したフォルダ内に新たなプロセスの作成します。 New Folder 選択したフォルダ内に新たなフォルダを作成します。 Import Process 出力されたプロセス（wajファイル）の取り込みを行います。 ドラッグアンドドロップでも同様の操作が可能です。 Export Process 選択したプロセスをwajファイルとして出力します。（wajファイル） Edit Group Process Designerでのプロセス編集や、そのプロパティ設定、プロセスの削除、名前の変更、切り取り、コピー、貼り付けなどを行うことができます。 Process Designer Process Designerを起動し、選択したプロセスの編集を行います。 Properties プロセスに対して、説明文の設定のほか、同時実行を制御したり、パスワードによる保護、セキュアスクリーン（実行中の画面を見えないようする）などの設定が可能です。 Delete 選択したフォルダまたはプロセスの削除を行います。 一度削除したフォルダ及びプロセスは復元できませんので、十分にご注意ください。 Select All 選択したフォルダ内の全プロセスを選択します。 一括でエクスポートする際などに使用します。 Rename 選択したフォルダまたはプロセスの名称を変更します。 Cut 選択したフォルダまたはプロセスを別のフォルダに移動するために切り取りします。 Copy 選択したフォルダまたはプロセスをコピーします。 コピー元のプロセスにトリガー、スケジュールが設定されている場合、新たにトリガー、スケジュールが作成され、紐づけが行われます。 WinAutomationにはバージョン管理機能が無いため、編集前にコピーを作成しておくことを推奨します。 Paste コピーまたは切り取りしたフォルダ・プロセスを選択したフォルダに複製します。 Enable Disableに設定されたプロセスをEnable（有効化）に設定します。 Disable 選択したプロセスをDisable（無効化）に設定します。 無効化されたプロセスはトリガーなどで実行が行われなくなります。 Execution Group コンソールから手動でプロセスを実行、停止を行うことが可能です。 Start 選択したプロセスを手動で実行します。 Stop 選択したプロセスが実行中の場合、対象のプロセスを中断します。 Find プロセスの検索が可能です。 Find Process プロセス名の一部を指定してプロセスの検索を行います。 Compiler 任意のマシンで実行できるスタンドアロンの実行可能ファイル（*.exe）を作成できます。 Generate Exe WinAutomation Consoleを起動せずに実行できる実行可能ファイル（*.exe）の作成を行います。 実行の履歴はLogsに記録されず、また作成した実行可能ファイルは、ライセンスがないPCでは実行できません。 The Processes Folders List pane フォルダを選択すると、フォルダに保存されたプロセスが右側のプロセスペインに表示されます。 右クリックメニュー（ボタンメニューと異なる機能のみ記載） Collapse All But This 選択したフォルダに子の階層があり、展開されている場合、展開を縮小（非表示）します。 The Processes List pane このペインでは、特定のフォルダーに保存されているすべてのプロセスを確認できます。 表示されたプロセスをダブルクリックすると、Process Designerが起動し、保存済みプロセスの編集が可能となります。 右クリックメニュー（ボタンメニューと異なる機能のみ記載） Edit Process 選択したプロセスを編集します。 ダブルクリックと同様です。 Add Trigger on Process 選択したプロセスにトリガーを設定します。 Add Schedule on Process 選択したプロセスにスケジュールを設定します。 Show Logs For Process(es) 選択したプロセスのログを表示します。 Show Triggers of Process(es) 選択したプロセスに設定されたトリガーを表示します。 Show Schedules of Process(es) 選択したプロセスに設定されたトリガーを表示します。 トリガータブの概要 指定したフォルダ内のファイルの作成や変更、削除などを感知してロボットを起動できるようにするファイルトリガー、 特定のメールの受信によって起動するメールトリガーなど、 特定イベントでロボットを実行するための設定を行います。 Create Group 新たにトリガーの作成を行います。 New トリガー一覧の中から、任意のトリガーの作成を行います。 Email Monitor Trigger Event Log Monitor Trigger File Monitor Trigger Idle Monitor Trigger Hotkey Trigger Ping Trigger Service Monitor Trigger Process Monitor Trigger Edit Group 作成済みのトリガーの設定変更などが可能です。 Edit 選択したトリガーの編集を行います。 ダブルクリックと同様です。 Reassign 選択したトリガーで実行するプロセスを変更します。 なお、1つのトリガーに複数プロセスを紐づけることは出来ません。 Copy 選択したトリガーをコピーします。 Paste コピーしたトリガーを貼り付けます。 Delete 選択したトリガーの削除を行います。 Select All 全トリガーを選択します。 Go to Process 選択したトリガーに紐づいたプロセスを表示します。 Collapse All Group 全てのトリガーの展開を縮小（非表示）します。 Enable Trigger Disableに設定されたトリガーをEnable（有効化）に設定します。 Disable Trigger 選択したトリガーをDisable（無効化）に設定します。 スケジュールタブの概要 指定した日時での実行、数分おきに繰り返し実行など、時間軸での実行制御を行います。 Create Group 新たにスケジュールの作成を行います。 New スケジュール、繰り返しスケジュールの中から、スケジュールの作成を行います。 Schedule Recurring Schedule Edit Group 作成済みのトリガーの設定変更などが可能です。 Edit 選択したスケジュールの編集を行います。 ダブルクリックと同様です。 Reassign 選択したスケジュールで実行するプロセスを変更します。 なお、1つのトリガーに複数スケジュールを紐づけることは出来ません。 Copy 選択したスケジュールをコピーします。 Paste コピーしたスケジュールを貼り付けます。 Delete 選択したスケジュールの削除を行います。 Select All 全スケジュールを選択します。 Go to Process 選択したスケジュールに紐づいたプロセスを表示します。 Collapse All Group 全てのスケジュールの展開を縮小（非表示）します。 Enable Schedule(s) Disableに設定されたスケジュールをEnable（有効化）に設定します。 Disable Schedule(s) 選択したスケジュールをDisable（無効化）に設定します。 履歴タブの概要 指定した日時での実行、数分おきに繰り返し実行など、時間軸での実行制御を行います。 Event Types Info（情報）、Warning（警告）、Error（エラー）から、絞り込みたいイベント種別を選択します。 Date Range ログが記録された日付の範囲を指定します。 Maintenance 表示された履歴情報を出力します。 Message ログに記憶されたメッセージが表示されます。 Additional Details ログに記録された詳細（エラーの詳細など）が表示されます。 オプションタブの概要 WinAutomation全体の設定やライセンス設定などを行います。 Help ヘルプ（英語）を起動します。 About WinAutomation Console起動時に表示されるスプラッシュ画面（バージョンなどが記載された画面）を表示します。 Settings General ロボット実行時の右下のポップアップの表示設定、ウィンドウサイズの記憶などの設定を行います。 Processes File プロセスファイルのバックアップ、復元などを行います。 プロセスファイルが破損した場合、作成したプロセスなどは復元出来なくなるため、定期的なバックアップを実施してください。 Exe 使用しません。 FTP FTPで送信可能なファイル形式を設定します。 Authentication ログインユーザー設定を行います。 未設定の場合、ログオフ状態からのトリガー、スケジュールによる実行は出来ません。 また共有サーバーに対して設定したファイルトリガーなどが正しく動作しない場合があります。 License ライセンス情報の設定を行います。 Error Handling Behaviour エラー発生時の振る舞いを設定します。 Send Email エラー発生時、設定したメールアドレスに対し、エラーメールを送信します。 利用にはSMTPサーバー設定が必要となります。 Run Another Process エラー発生時に指定したプロセスを起動します。 例えば、画面にエラー発生を知らせるようなウィンドウを表示する際に使用します。 Write Event to Text File 指定したパスにエラーテキストを出力します。 Record Event to Windows Event Log エラーの内容をWindowsのイベントログに記録します。 Add Screenshot to Logs エラーが発生した瞬間のスクリーンショットを履歴に記録します。 Email/SMTP エラーメールを送信するための、SMTPサーバー情報の設定を行います。 Addons 使用しません。]",
        url: "http://A181102:2015/tutorial/console/"
    },
    
    {
        title: "Task1 コンソールを操作してみましょう(tutorial)",
        content: "[下記手順に従い、プロセスを作成してみましょう。（所要時間 05:00） My Processesフォルダを選択、NewFolderボタンを押下し、「Task_氏名」フォルダを作成してください。（例 Task_あさひ太郎） 作成したフォルダを選択し、NewProcessを押下してください。 プロセス名称「Task1」を作成、Process Designerを起動してください。 Process Designerを終了し、「Task1」が正常に作成されていることを確認してください。 「Task1」の名称を「Task1コンソール操作」に変更してください。]",
        url: "http://A181102:2015/tutorial/task1_console/"
    },
    
    {
        title: "ProcessDesignerの操作方法(tutorial)",
        content: "[ロボットの開発に必須となるツールがProcessDesignerです。 アクションの設定方法、デバッグ方法などProcessDesignerの基本操作を学びましょう。 初期設定ではデバッグ実行時にプロセスが自動保存されません。 また、1行進むのに100msの待機時間が発生するため、デバッグに時間がかかってしまいます。 メニュー Tools Process Designer Options Debugger を開き、下記設定を行いましょう。 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;[While running process in debugger wait for]・・・「0」 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;[Save Process modifications automatically everytime it is run through the debugger]・・・チェック アクションの配置 画面の左側にあるアクション一覧から、Display Messageアクションを探してみましょう。 検索条件に「Display」や「Message」と入力することで、絞り込むことも可能です。 Display Messageアクションをダブルクリックするか、ワークスペースにドラッグアンドドロップしてください。 アクションの設定画面が起動されるため、以下のように設定してみます。 OKボタンを押し、実行を行ってください。 ウィンドウ概要 アクション一覧 ロボットの命令文を「アクション」と呼びます。 ロボットの動きはアクションの組み合わせで制御されます。 各アクションをダブルクリックするか、ワークスペースにドラッグアンドドロップすることで、配置が出来ます。 ワークスペース ロボットの動きをつかさどる心臓部です。 基本的には上から順番に実行されます。 ファンクション 同じプロセス内で共通した処理であったり、エラーが発生した際の処理をまとめるものを「ファンクション」と呼びます。（EXCELのシートのような機能） ファンクションを上手に使うことで、見やすさ、保守性が向上します。 変数一覧 ロボットがデータを記憶する器を「変数」と呼びます。 WinAutomationでは「％」で囲まれた文字列を「式」として認識し、変数を使用する場合は、%ABC%などのように使用します。 変数を定義すると、WinAutomationが文字や数字など様々な型を自動で認識します。 なお変数名に日本語は使用できません。 コントロールリポジトリ 操作対象となるアプリケーションの細かな情報が記憶されます。 アプリケーション操作において、かなり上級の設定を行う場合に使用するため、ここでは割愛します。 イメージリポジトリ 画像認識で使用するイメージ情報が記憶されます。 エラー一覧 デバッグ実行時のエラー内容が表示されます。 検索結果一覧 変数検索を行った際の結果が表示されます。 ツールバー概要 上書き保存 &#43;&#43;ctrl&#43;s&#43;&#43; 戻る &#43;&#43;ctrl&#43;z&#43;&#43; 進む &#43;&#43;ctrl&#43;y&#43;&#43; 変数名変更 選択した変数名を変更します。 こちらを使用せずに直接変更した場合は、変更した名称が反映されずエラーとなります。 アクション切り取り &#43;&#43;ctrl&#43;x&#43;&#43; アクションコピー &#43;&#43;ctrl&#43;c&#43;&#43; アクション貼り付け &#43;&#43;ctrl&#43;v&#43;&#43; 変数検索 変数名で検索を行います。 Region ワークスペースに設定したアクションのブロックで囲みます。 コメント コメント行を挿入します。 Macro Recorder マクロレコーダー機能を起動します。 Web Recorder Webレコーダー機能を起動します。 実行 プロセスを実行します。 1行ずつ実行 動作確認のために1行ずつプロセスを実行します。 一時停止 プロセスを一時停止します。 停止 プロセスを終了します。 ワークスペース ブレークポイント 数字の横をクリックすると赤い丸が表示されます。 これをブレークポイントと呼び、実行時に処理を一時停止させることが可能です。 ブレークポイントを外す際は、赤丸をクリックします。 アクションの無効化 アクションをDisableに設定することで、そのアクションは実行されなくなります。 変更前のコードを残しておいたり、テスト・本番用などの切り替えを行うのに有効です。 また図のようにコメントを設定しておくと非常に見やすくなります。 変数の設定 各アクションを設定する画面に歯車マークが表示されている項目があります。 これをクリックすると、定義された変数一覧を使用することができ、入力の短縮につながります。 操作動画 アクション配置とファンクション ブレークポイントを設定しデバッグ]",
        url: "http://A181102:2015/tutorial/processdesigner/"
    },
    
    {
        title: "基本アクションについて(tutorial)",
        content: "[Process Designerの操作で学んだように、WinAutomationは様々なアクションを組み合わせることで、開発を行っていきます。 WinAutomationは200を超えるアクションが組み込まれています。 ここではもっとも基本的なアクションを学びましょう。 変数操作 WinAutomationは内部データを変数と呼ばれる箱で管理しています。 変数は式の一部として記述を行い、「%Variable%」のように使用します。 変数には数値、文字、日付など様々なタイプ（型）があります。 文字であれば.Length（文字長）、Listであれば.Count（データの個数）など、変数の型によって必要な補足情報（プロパティ）にアクセスすることが可能です。 変数名を初期値のまま使用することも可能ですが、これでは何の値が設定されているのか分かりません。 「%FileName%」であれば、ファイル名が格納されていることが分かります。 「%InputExcelFileName%」であれば、入力に必要なEXCELファイル名が設定されていることが分かります。 あまり長すぎるのも好ましくありませんが、簡潔で分かりやすい変数名を設定するように心がけましょう。 Set Variable 新たな変数を定義します。 Set Value: 値 into Variable: 変数名（日本語不可） 他の変数同士の値を連結や計算したい場合は以下のような設定が可能です。 %a%%b% %a b% %a&#43;b% %a/b% 「100%ジュース」のように、設定したい文字に「%:パーセント(半角)」が含まれる場合、式として解釈されてしまい、エラーとなってしまいます。 この場合「100￥%ジュース」のように、「%」の前に「￥」を記載することで、エラーを回避することができます。（￥は半角） また「￥」を表現したい場合は「￥￥」のように記述します。 フォルダ名とファイル名を結合したいときは「%Folder%￥%FileName%」ではなく「%Folder%￥￥%FileName%」と設定することを覚えておきましょう。 Increase Variable 指定した変数に指定した値を加算します。 Variable Name : 変数名 Increase by: 加算値 減算を行う場合は、Decrease Variableアクションを使用します。 Set Variableアクションで%num &#43; 1%とした場合も加算が行われます。 Increase Variableアクションのほうが具体的な動作がわかるため、初期値設定や計算を行う場合はSet Variableアクションを、ループ処理に組み込むような場合は、こちらを使用したほうが好ましいでしょう。 List Listは複数の値を1つの変数で管理することができます。（EXCELの1行のようなイメージ） ListはIndexと呼ばれる0から始まる連番の番地で管理され、以下のような形で値を取得することができます。 %List[0]% Listアクションは2つのアクションで使用できます。 Create New List List変数を作成します。 Add Item to List 作成したListに値を追加します。 条件分岐 日常生活において、青信号は進め、赤信号は止まれ、黄色信号は警告など、様々な条件によって、取るべき行動が分岐していきます。 このように、決まった条件下で決まった処理を行うことをルールエンジンと呼びます。 WinAutomationにおいては、これら条件によって分岐する処理を、条件分岐アクションを使い分けることで、解決していきます。 If/ElseIf/Else If(メイン条件)、ElseIf（サブ条件n）、Else（その他）の条件を設定することができます。 Ifアクションは、If File Existsアクション（対象のファイルが存在しているか）や、If Windowsアクション（対象のウィンドウが存在しているか）など、様々なケースを想定したアクションが存在しています。 ifアクションは条件分岐のもっとも基本的なアクションです。 First Operand : 条件1 Operator : 比較式(=、&amp;gt;、&amp;lt;、Contains（含む）、Exists（存在する）・・・) Second Operand : 条件2 if/ElseIfアクションはそれぞれまったく異なる条件を設定することができます。 Else IfアクションはIfアクションとセットで使用されるアクションで、Ifに該当せず、別条件を設定したい場合に使用します。 Elseアクションは、If/Else Ifアクションとセットで使用され、すべての条件に合致しない場合に、実行されるアクションです。 Ifアクションの中にIfアクションを設定することもできます。 このような使い方をifアクションのネストと表現します。 ifアクションは基本的に1つの条件設定ですが、1つのアクション内に複数条件を指定したい場合は、以下のような設定が可能です。 Switch/Case Switch/Caseもifと同様の条件分岐アクションですが、ifのFirst Operandにあたる条件が固定となるのが特徴です。 Switchアクションは、Caseアクションと組み合わせて使用し、その他条件はCase Defaultアクションを使用します。 条件の対象は同じで、条件値だけが変わる場合、Switchを使うことにより、if/ElseIf/Elseと比べ、格段に可読性が向上します。 ループ EXCELに10行データが設定されているような場合、WinAutomatuonではループ処理を使用して、各行のデータにアクセスします。 Loop 指定した回数を繰り返し処理するアクションです。 Loopアクションは「開始値」「終了値」「増減値」「現在値」の4つで構成されます。 Start From : 開始値 End To : 現在値 Increment by : 増減値 Store Current Index into : 現在値（変数） 現在値は一般的にIndexと表現されます。 Listの要素にアクセスする場合は以下のように記述します。 %List[Index]% %List[Index - 1]% For Each For Eachアクションは、リスト、DataTableなど複数の要素で構成される要素数分だけループするアクションです。 要素数分だけ繰り返します。 Variable to Iterate : 要素の集合体（Listなど） Store Current Item into : 現在値が格納される変数 フォルダ操作 フォルダの作成や、フォルダ内のファイルの取得、デスクトップの取得などが可能です。 Create Folder 指定したパスにフォルダを作成します。 Create New Folder into : フォルダを作成するパス New Folder Name : 新たに作成するフォルダ名 Store Newly Created Folder into : 作成したフォルダのパス情報が格納される変数 既にフォルダが存在する場合は、無視されます。 Copy Folder 指定したパスにフォルダをコピーします。 Folder to Copy : コピーしたいフォルダパス Destination Folder : コピー先のパス If Folder Exists : 既にフォルダが存在する場合の設定 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Overwtire : 上書き &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Do not Copy : コピーしない Store Copied Folder into : コピーしたフォルダのパス情報が格納される変数 Get Subfolders in Folder 指定したフォルダに含まれるサブフォルダーを取得します。 Folder : 対象のフォルダパス Include Subfolders : 孫フォルダ、ひ孫フォルダなども取得したい場合はチェック Sortingタブからソート順を指定できます。 Get Special Folder デスクトップ、プログラムファイルなど特定のフォルダーのパスを取得できます。 Special Folder Name パス DesktopDirectory デスクトップ Personal ドキュメント MyMusic マイミュージック MyPictures マイピクチャ System C:\Windows\system32 ProgramFiles C:\Program Files ファイル操作 ファイルのコピー、削除、検索などが可能です。 Copy File 指定したパスにファイルをコピーします。 File(s) to Copy : 対象のファイルパス Destination Folder : 移動先のフォルダパス If Files(s) Exists : ファイルが存在した場合の処理 Delete File(s) 指定したパスのファイルを削除します。 File(s) to Delete : 対象のファイルパス Get Files in Folderアクションと組み合わせることで、複数ファイルの削除が可能です。 Get Files in Folder 指定したパスからファイルを取得します。 Folder : 検索対象のフォルダパス File Filter : ファイル名フィルタ Store Retrieved Files into : 検索結果 ファイル名フィルタは「*」によるあいまい検索が可能です。 *.xlsx 待機 指定した時間待機したり、特定の画面が起動するまで待機します。 Wait 指定した時間待機します。 Wait for : 待機時間(秒) ロボットがアプリケーションを操作する際、ロボットの動きが速すぎて、画面の切り替えがついてこない場合があります。 そのような場合にWaitアクションは非常に有効です。 しかし、パソコンによって処理速度はまちまちなので、出来るだけWait for WindowアクションやWait for Imageアクションを使用するのが良いでしょう。]",
        url: "http://A181102:2015/tutorial/action/"
    },
    
    {
        title: "Task2 アクションを設定してみましょう(tutorial)",
        content: "[問題 下記手順に従い、プロセスを作成してみましょう。（所要時間 10:00） Task1で作成したフォルダを選択し、プロセス名称「Task2」を作成、Process Designerを起動してください。 次の要件を満たすプロセスを作成してください。 Set Variableアクションを配置し、変数名「%From%」値「1」としてください。 Set Variableアクションを配置し、変数名「%To%」値「10」としてください。 Loopアクションを配置し、%From%～%To%まで繰り返すように設定してください。 LoopアクションのIndexが「5」の場合、Display Messageアクションを使用して「5です。」と表示されるように設定してください。 LoopアクションのIndexが「8」以上の場合、Display Messageアクションを使用して「nです。」と表示されるように設定してください。 ただし、nはLoopにおける現在のIndexであり、LoopIndexが8のとき、「8です。」と表示されるものとします。 作成したプロセスを実行し、正常に動作することを確認してください。 条件を変更し、動作の違いを確認してください。 解答例 Task2_解答例&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download]",
        url: "http://A181102:2015/tutorial/task2_std_action/"
    },
    
    {
        title: "トリガー設定(tutorial)",
        content: "[トリガー機能はWinAutomationを強力に使用するために最も重要な機能の1つです。 ここではトリガーに関する基礎知識を学びましょう。 トリガーの設定 もっとも使用するファイルトリガーを使用して、トリガーを作成してみましょう。 トリガーの作成 コンソールからTriggersタブを選択します。 Newボタンを押し、File Monitor Triggerを選択します。 以下のようにトリガーの内容を設定します。 Folder to Monitor : デスクトップ Files to Monitor : ＊テスト＊.xlsx ＊は半角で入力してください。 OKボタンを押下します。 起動するプロセスを選択する画面が表示されるため、Examples &amp;gt; 01 - Beginner &amp;gt; 01 - Run Calculator を選択します。 以下の2ファイルを順番にデスクトップにダウンロードします。 RPAテスト_2019年.xlsx&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download RPATest_2019年.xlsx&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download 今回は対象を「＊テスト＊.xlsx」と設定したため、ファイル名に「テスト」が含まれるファイル名のみ、トリガーが実行されます。 トリガー変数 今回使用したファイルトリガーでは、「RPAテスト_2019年.xlsx」「テスト2020年.xlsx」「RPAテスト.xlsx」のいずれでも実行が行われますが、どのファイルがきっかけとなり、プロセスが起動したかがわからないと、処理ができない場合があります。 WinAutomationではトリガーで実行されるプロセス用に、あらかじめ決められた変数が準備されています。 新規にProcess Designerを起動します。 Variables Managerを終了し、Display Messageアクションを配置し、Message To Displayに「%FileTriggerFilePath%」と設定します。 プロセスを保存し、先ほど作成したトリガーの起動プロセスを今作成したプロセスに変更します。 下記ファイルをダウンロードし、デスクトップに配置します。 RPAテスト.xlsx&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download メッセージにきっかけとなったファイルパスが表示されることを確認します。 メニュー Tools Variables Manager Trigger Variables から、トリガー変数一覧が確認できます。 トリガーの種類 トリガーは様々な状況に対応できるよう、以下のものが準備されています。 File Monitor Trigger もっとも使用頻度が高いトリガーです。 指定したフォルダにファイルが作成、更新、削除された場合に実行することが可能です。 例えば、注文書EXCELをサーバーにコピーすると、自動でPDF印刷し、得意先に送付するなどの処理が可能となります。 Email Monitor Trigger メールの受信をきっかけに実行されるトリガーです。 メールの添付ファイルをサーバーに自動保存するなどの処理が可能となります。 Event Log Monitor Trigger Windowsのイベントログをきっかけに実行されるトリガーです。 サーバーなどにインストールした際に、エラーをキャッチしてメールを送付するなどの処理が可能となります。 Idle Monitor Trigger PCが一定時間無操作の場合に実行されるトリガーです。 個人情報が保存されたマシンで、操作がなかった場合に自動シャットダウンするなどが可能となります。 Hotkey Trigger 特定のキーを押下された場合に実行されるトリガーです。 ショートカット実行できるため、操作性が向上します。 ただし、ほかのショートカットキーと重複しないように設定を行う必要があります。 Ping Trigger 特定のネットワーク通信を監視するトリガーです。 サーバーにPingを飛ばし、通信不可になった場合に、自動的にシステム設定をメインサーバーをサブサーバーに切り替えるなどの処理が可能となります。 Service Monitor Trigger Windowsのサービスを監視するトリガーです。 特定サービスが起動・終了したタイミングで実行ができるため、常に立ち上がっている必要があるサービスの監視に使用することが可能です。 Process Monitor Trigger Windowsのプロセス（アプリケーション）監視するトリガーです。 アプリケーションの起動・終了をキャッチして、利用実態を取得する、トラブルの早期感知などが可能となります。]",
        url: "http://A181102:2015/tutorial/trigger/"
    },
    
    {
        title: "Task3 トリガーを作成してみましょう(tutorial)",
        content: "[問題 下記手順に従い、プロセスとトリガーを作成してみましょう。（所要時間 10:00） 下記ZIPファイルをダウンロードし、デスクトップに展開してください。 Task3.zip&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download 新たに「Task3」のプロセスを作成します。 展開したフォルダの「実行」フォルダにPDFファイルが配置されたら、「処理済み」フォルダに移動するようにアクションを設定します。 「Task3」プロセスが起動されるように、トリガーを設定します。 ファイルの移動には「Move File(s)」アクションを使用します。 解答例 Task3_解答例.waj&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download トリガーの動作確認は、Folder to Monitorパスの「任意のuser名」部分をご自身のユーザー名に変更してから行ってください。]",
        url: "http://A181102:2015/tutorial/task3_trigger/"
    },
    
    {
        title: "スケジューラー設定(tutorial)",
        content: "[スケジューラー機能は、いわば時間に関するトリガーともいえます。 Windowsにもタスクスケジューラーが存在しますが、月末を指定出来るなどより高度な設定が可能です。 スケジューラーに関する基礎知識を学びましょう。 スケジュール設定 スケジュールは2つの設定が可能です。 Schedule Recurring Schedule 今回はScheduleを設定してみましょう。 コンソールからSchedulerタブを選択します。 Newボタンを押し、Scheduleを選択します。 Schedule TypeでWeeklyを選択し、Mondayにチェックを入れます。 Add Timeを選択し、12:00:00と18:00:00を設定します。 OKを押し、対象のプロセスを選択します。 毎週月曜日の12:00と18:00に実行される設定が完了です。 スケジューラーの種類 スケジュールには以下のものが準備されています。 Schedule Scheduleは任意のタイミングで実行したい場合に使用します。 以下のような内容を設定することができます。 Daily（毎日） 時刻指定 On Specific Dates（任意の日付） 日付指定 時刻指定 Weekly（週次） 曜日指定 Monthly（月次） 月指定 日指定（1日、5日など） 月末日指定 平日の末日指定 時刻指定 Recurring Schedule 指定した時間間隔で実行されます。 単位はSeconds（秒）、Minutes（分）、Hours（時）から選択可能です。]",
        url: "http://A181102:2015/tutorial/scheduler/"
    },
    
    {
        title: "Task4 スケジューラーを作成してみましょう(tutorial)",
        content: "[問題 下記手順に従い、プロセスとスケジュールを作成してみましょう。（所要時間 10:00） 新たに「Task4」のプロセスを作成します。 現在時刻をDisplay Messageアクションで表示されるようにします。 作成したプロセスに対し、30秒間隔で実行されるようにRecurring Scheduleを作成します。 何度か確認ができたら、作成したスケジュールをDisable（無効化）に設定します。 現在時刻は、Get Current Date and Timeアクションで取得できます。 解答例 Task4_解答例.waj&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download]",
        url: "http://A181102:2015/tutorial/task4_scheduler/"
    },
    
    {
        title: "EXCEL操作(tutorial)",
        content: "[これまでは基礎的な部分が大きかったですが、RPAらしく他のアプリケーションを操作していきましょう。 まずは、業務には欠かせないEXCELの操作を行いたいと思います。 EXCELのデータ構造 普段意識することはありませんが、EXCELは縦と横の2次元データから構成されています。 2次元データというと少し複雑に感じますが、「A1」であれば「A列の1行目」というように、理解することができると思います。 WinAutomationでは、EXCELデータを取り込むと、DataTableという形式に変換され、「%ExcelData[0][0]%」というような式でアクセスします。 1番目のインデックスが「行」、2番目のインデックスが「列」を表しており、読み込む前のEXCELは1から、WinAutomationに読み込んだ後は0からスタートするため、注意しましょう。 EXCELの起動 Launch Excelアクションを使用することで、EXCELを起動することができます。 プロセスデザイナーを起動し、Launch Excelアクションを配置します。 そのままOKボタンを押し、実行を行います。 空のEXCELが起動することを確認します。 次に先ほど設定したLaunch Excelアクションを編集し、すでに作成されているファイルを開いてみましょう。 既存ファイルを開く場合はLauch Excel項目で「and open the dollowing document」を選択し、Document Path項目に開きたいEXCELファイルのパスを指定します。 再度実行を行い、EXCELファイルが起動することを確認してください。 Make Instance Visibleのチェックを外すと、EXCELの画面が表示されなくなる代わりに、処理が若干早くなります。 ただし、エラーが発生した場合に、通常の操作ではEXCELを閉じれなくなるため、基本的には表示させておくのが無難です。 EXCELへの書き込み EXCELへの書き込みには、Write to Excel Worksheetアクションを使用します。 プロセスデザイナーを起動し、Launch Excelアクションを配置、空のEXCELを起動するように設定します。 Write to Excel Worksheetアクションを配置し、Excel Instanceに上記で設定したEXCELのインスタンスを設定します。 インスタンスとは、複数のEXCELを起動している場合に、どのEXCELを操作するのかを判断するために、WinAutomationが生成する名札のようなものです。 以下のように各項目を設定します。 実行を行い、EXCELのA1セルに「Hello Excel」が表示されることを確認します。 Column項目にはA、ABのようにEXCELの列名を設定することも可能です。 EXCELの読み込み EXCELへの読み込みには、Read from Excel Worksheetアクションを使用します。 プロセスデザイナーを起動し、Launch Excelアクションを配置、下記EXCELファイルを起動するように設定します。 サンプル領収書.xlsx&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download Read from Excel Worksheetアクションを配置し、Excel Instanceに上記で設定したEXCELのインスタンスを設定します。 以下のように各項目を設定します。 実行を行い、変数の値を確認します。 複数行の読み込み EXCELへの読み込みには、Read from Excel Worksheetアクションを使用します。 プロセスデザイナーを起動し、Launch Excelアクションを配置、下記EXCELファイルを起動するように設定します。 職員マスタ.xlsx&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download Get First Free Columnアクションを配置します。 このアクションを使用することで、列や行数が変わっても、プロセスを修正することなく、処理することが可能となります。 Read from Excel Worksheetアクションを配置し、Excel Instanceに上記で設定したEXCELのインスタンスを設定します。 以下のように各項目を設定します。 実行を行い、変数の値を確認します。 Get First Free Columnでは、末端の空白の行番号、列番号を返します。 そのため、結果のように、行と列の最後に空白の箇所が出てしまいます。 これを回避するには「%FirstFreeColumn - 1%」のように、番号を1つ前に設定する必要があります。 Read from Excel WorksheetアクションのAdvancedタブで「First line of range contains column names]にチェックを入れると、先頭行を列名として設定することが可能になります。 シートの選択 上記アクションで実行されるシートは、最後に保存する前に表示されていたシートとなります。 そのため複数シートが存在するようなEXCELでは、本来処理したいシートではなく、誤ったシートで処理が行われる可能性があります。 EXCEL操作を行う場合には、Set Active Excel Worksheetアクションを使用して、シートを選択するようにするのがよいでしょう。 EXCELの保存と終了 作成したEXCELを保存するには、Save Excelアクションを使用します。 またEXCELを終了する場合には、Close Excelアクションを使用します。 Close Excelアクションでも保存を行うことができるため、保存と終了を同時に行う場合には、Close Excelアクションのみで処理することが可能です。]",
        url: "http://A181102:2015/tutorial/excel/"
    },
    
    {
        title: "Task5 EXCELを操作してみましょう(tutorial)",
        content: "[問題 下記手順に従い、プロセスを作成してみましょう。（所要時間 20:00） 新たに「Task5」のプロセスを作成します。 EXCELを新規に起動し、下記データを書き込むようにアクションを設定します。 店舗 売上 粗利 上野店 128 41 大宮店 53 29 郡山店 41 25 書き込みしたファイルを「Task5.xlsx」という名前でデスクトップに保存します。 次に下記ファイルをデスクトップにダウンロードし、そのファイルを読み込むアクションを設定します。 Task5_追加.xlsx&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download ダウンロードしたファイルから「山形店」を抽出し、「Task5.xlsx」ファイルに追記、保存してください。 解答例 Task5_解答例.waj&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download]",
        url: "http://A181102:2015/tutorial/task5_excel/"
    },
    
    {
        title: "マクロレコーダー(tutorial)",
        content: "[これまで、様々なアクションを手動で設定してきましたが、マクロレコーダー機能を用いると、アプリケーション操作を自動で記録することが可能になります。 ここでは、マクロレコーダー機能の基本操作を学びます。 マクロレコーダーの操作 コンソールから新たにプロセスを作成します。 Macro Recorderを選択します。 Macro Recorderウィンドウが起動します 操作したいアプリケーションを起動し、操作していきます。 Macro RecorderウィンドウでFinishボタンを押下します。 記録した内容がワークスペースに展開されます。 実行を行い、動作を確認します。 パスワードは自動保存されない仕組みになっています。 手動での設定を行ってください。 全ての処理を忠実に再現できるわけではありません。 処理が速すぎて操作するアプリケーションがついてこない場合もあります。 処理の概要を記録し、少しずつ手で修正を行うのがよいでしょう。 操作動画 アプリケーション操作]",
        url: "http://A181102:2015/tutorial/macro_recorder/"
    },
    
    {
        title: "Task6 アプリケーションを操作してみましょう(tutorial)",
        content: "[問題 下記手順に従い、プロセスを作成してみましょう。（所要時間 20:00） 下記ファイルをダウンロードし、デスクトップに展開します。 Task6.zip&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download 展開されたフォルダから「Task6.exe」を実行し、下記ユーザー情報を設定します。 ユーザーID : user1 パスワード : password [ログイン]ボタンを押下します。 システムメニュー画面の[バックアップ]ボタンを押下します。 バックアップが完了したメッセージを確認し、アプリケーションを終了します。 新たに「Task6」のプロセスを作成します。 上記操作内容をマクロレコーダーで記録します。 動作確認を行います。 プログラムがうまく起動できない場合は、Run Applicationアクションを使用してプログラムを起動してください。 解答例 Task6_解答例.waj&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download]",
        url: "http://A181102:2015/tutorial/task6_macro_recorder/"
    },
    
    {
        title: "Webレコーダー(tutorial)",
        content: "[これまで、Webレコーダー機能を用いると、Webページ操作を自動で記録することが可能になります。 ここでは、Webレコーダー機能の基本操作を学びます。 Webレコーダーの操作 コンソールから新たにプロセスを作成します。 Web Recorderを選択します。 どのブラウザを使用するか選択します。 ここではAutomation Browserを選択してください。 Macro Recorderウィンドウが起動します URL欄にGoogleのURLを入力し、Goボタンを押下します。 URL : http://google.co.jp/ 検索キーワードに「RPA wikipedia」を設定し、エンターキーを押します。 検索結果ページが表示されます。 もっとも上位に表示されたリンク上で右クリックし、「Extract Element Value &amp;gt; Text(&amp;ldquo;～～&amp;hellip;&amp;ldquo;」を選択してください。 同様に2番目のページのリンク上で右クリックし、「Extract Element Value &amp;gt; Text(&amp;ldquo;～～&amp;hellip;&amp;ldquo;」を選択してください。 RECORDED ACTIONSから Show Preview を選択します。 2つの動作で対象ページの全タイトルが取得できたことを確認します。 プレビュー画面を終了し、Finishボタンを押下します。 記録した内容がワークスペースに展開されます。 実行を行い、動作を確認します。 Google Chrome、Mozilla Firefoxを利用する場合は、拡張機能のインストールが必要です。 Softomotive Automation Google Chrome / Mozilla Firefox 操作動画 Web操作]",
        url: "http://A181102:2015/tutorial/web_recorder/"
    },
    
    {
        title: "Task7 Webサイトを操作してみましょう(tutorial)",
        content: "[問題 下記手順に従い、プロセスを作成してみましょう。（所要時間 20:00） 新たに「Task7」のプロセスを作成します。 Webレコーダー機能を用いて、Yahoo!Japan 路線情報にアクセスし、東京-大阪間を検索。 ルート1～ルート3に表示される運賃と乗り換え回数を調べてください。 URL : https://transit.yahoo.co.jp/ 出発 : 東京駅 到着 : 大阪駅 日時 : 2019年09月01日 12:00 到着 取得した結果をEXCELに転記し、「Task7.xlsx」として保存してください。 解答例 Task7_解答例.waj&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download]",
        url: "http://A181102:2015/tutorial/task7_web_recorder/"
    },
    
    {
        title: "画像認識(tutorial)",
        content: "[一般的にRDAと呼ばれるツールは画像認識のみの機能を有していることが多いです。 画像認識技術は、以前は処理が遅く、一般企業での利用は難しい分野でしたが、近年はコンピュータの性能が飛躍的に向上し、これをきっかけにAIやRPAが流行ったと言われています。 ここではWinAutomationの画像認識を利用してみましょう。 WinAutomationにおける画像認識 WinAutomationでは、マクロレコーダー、Webレコーダーを利用した場合、画像認識を使用せずに、アクションが設定されます。 これは画像認識と比べて、圧倒的に速度が速いためです。 しかし、アプリケーションによっては、画像認識を利用しないと正しく動かないものもあります。 例えば、下記のように処理結果が画像によって設定されているような場合です。 こういったケースの場合の解決策として、画像認識を利用します。 画像認識の設定 画像認識では主に3つのアクションを使用します。 If Image 画像が存在しているか、または存在していないかを判断します。 Wait for Image 画像が表示される、または表示が消えるまで処理を待機します。 Move Mouse to Image 指定した画像にマウスを移動します。 EXCELを画像認識で操作してみましょう。 Launch Excelアクションで新規のエクセルを起動します。 Focus Windowアクションで起動したエクセルにフォーカスを設定します。 Move Mouse to Imageアクションで[挿入]タブの画像を設定し、[Add Image From Images Repository]ボタンを押下します。 Capture Imageボタンを押下します。 EXCELの挿入タブの左上をクリックし、右下までドラッグアンドドロップします。 設定した画像に名前を付けます。 画像が正しく設定されたことを確認し、OKボタンを押します。 Send Mouse Clickアクションで左クリックを行います。 Wait for Imageアクションで「画像」の画像を設定します。 上記と同様の手順でMove Mouse to Imageアクションで[×]ボタンの画像を設定します。 実行を行い動作を確認します。]",
        url: "http://A181102:2015/tutorial/image_recognition/"
    },
    
    {
        title: "Task8 画像認識で処理を作成してみましょう(tutorial)",
        content: "[問題 下記手順に従い、プロセスを作成してみましょう。（所要時間 20:00） 下記ファイルをダウンロードし、デスクトップに展開します。 Task8.zip&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download 展開されたフォルダから「Task8.exe」を実行します。 このプログラムは1～5までの番号ついたボタンが配置されています。 このボタンにはランダムにあたりとはずれが設定されています。 あたりの画像、はずれの画像は、それぞれの表示ボタンで表示させることが可能です。 各ボタンを押下し、 あたりの場合はDisplay Messageアクションで「〇番が当たり！」 はずれの場合はDisplay Messageアクションで「〇番は危険・・・」 と表示するプロセスを、画像認識を使って作成してください。 解答例 Task8_解答例.waj&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download]",
        url: "http://A181102:2015/tutorial/task8_image_recognition/"
    },
    
    {
        title: "例外処理(tutorial)",
        content: "[ロボットを動かす際、想定したデータ形式と異なる、サイトのURLが変わったなど、様々な要因でエラーとなる可能性があります。 WinAutomationでは各アクションに対して、エラー発生時にどういった処理を行うかの設定が可能です。 ここでは例外処理に関する基礎的な内容を学びます。 アクションに対する例外の設定 Wait for Imageアクションを例題に例外の設定を行います。 ブラウザを起動し、GoogleやYahoo!Japanなどのページを開きます。 Wait for Imageアクションを配置し、対象の画像にロゴを設定します。 Fail if image does not not appear withinにチェックを入れ、秒数を1秒に設定します。 Display Messageアクションを配置し、任意のメッセージが出来るように設定します。 ブラウザを終了し、実行。 エラーになることを確認します。 Wait for Imageアクションを配置し、Exeption Handlingタブを開きます。 Continue Process Executionにチェックを入れ、Go to next actionを選択します。 再度ロボットを実行し、エラーが発生しないことを確認します。 例外設定の概要 If an exeption occurs Retry Actionにチェックを入れることで、リトライを行うことが出来ます。 表示に時間がかかっているために処理できない場合があるなどに有効です。 Exeption handling rules for 特定のエラーが発生した場合に限り、例外処理を行いたい場合に設定します。 指定可能なExeptionの種類はアクションごとに決まっています。 Set Variable 例外発生時に変数を設定したい場合に設定します。 エラー有無によって、何らかの分岐を行いたい場合などに使用します。 Run another Process 例外発生時に別プロセスを実行したい場合に設定します。 共通エラープロセスを別に準備している場合などに使用します。 Run Function 例外発生時に別ファンクション処理を実行したい場合に設定します。 エラーメール送信などに使用します。 Continue Process Execution Go to next action 例外を無視して次に進みます。 Repeat action 処理を再度実行します。 Go to label 指定したラベルに移動します。]",
        url: "http://A181102:2015/tutorial/exeption/"
    },
    
    {
        title: "()",
        content: "[]",
        url: "http://A181102:2015/index.js"
    },
    
    
    {
        title: "チュートリアル（基礎）",
        content: "[概要 RPAの概要、WinAutomationの基本操作、基本的なアクションなどRPA開発に必要な基礎内容の学習を行うページです。 サンプルの「基本内容」をご利用いただき、実際のプロセスを確認いただくことで、より習熟度を高めることが可能です。]",
        url: "http://A181102:2015/tutorial/"
    },
    
    {
        title: "アクション一覧",
        content: "[リンクをクリックすると外部サイトが開きます。 System アクション 概要 Run Application Action 指定したアプリケーションの実行を行います。 Run DOS Command Action コマンドラインの実行を行います。 Run VBScript Action VBScriptの実行を行います。 Run Javascript Action Javascriptの実行を行います。 Run PowerShell Script PowerShellの実行を行います。 Terminate Process Action 指定したアプリケーションを停止します。 Print Document Action ドキュメントの印刷を行います。 Get Default Printer Action 「通常使うプリンター」を取得します。 Set Default Printer Action 「通常使うプリンター」を設定します。 Log Off User Action ログオフします。 Shutdown Computer Action シャットダウンします。 Show Desktop Action デスクトップを表示します。 Lock Workstation Action マウスやキーボードの使用を制限します。 Play Sound Action 指定したサウンドファイルを再生します。 Empty Recycle Bin Action ゴミ箱を空にします。 Take ScreenShot Action スクリーンショットを撮影します。 Control Screen Saver Action スクリーンセーバーの設定、復帰などを制御します。 Ping Action 指定したホストに対し、Ping応答の確認を行います。 Set Environmental Variable Action 環境変数の設定を行います。 Get Environmental Variable Action 環境変数を取得します。 Delete Environmental Variable Action 環境変数の削除を行います。 Get Screen Resolution Action 画面の解像度を取得します。 Set Screen Resolution Action 画面の解像度を設定します。 Conditionals アクション 概要 If Action 条件付きブロックを定義します。 If File Exists Action ファイルの存在有無に関する条件付きブロックを定義します。 If Folder Exists Action フォルダの存在有無に関する条件付きブロックを定義します。 If Service Action サービスの状態に関する条件付きブロックを定義します。 If Process Action Windowsプロセスに関する条件付きブロックを定義します。 If Window Action ウィンドウに関する条件付きブロックを定義します。 If Image Action 画像に関する条件付きブロックを定義します。 If Text on Screen (OCR) 画面をOCRでスキャンした際の条件付きブロックを定義します。 If Window Contains Action ウィンドウ要素に関する条件付きブロックを定義します。 If Web Page Contains Action Webページ要素に関する条件付きブロックを定義します。 Else Action Ifアクションに対する対象外ブロックを定義します。 Else If Action Ifアクションに対する別条件ブロックを定義します。 End If Action Ifアクションの終わりを定義します。 Switch 特定のオブジェクトに対する条件付きブロックを定義します。 End Switch Switchアクションの終わりを定義します。 Case Switchアクションに対する条件式を定義します。 End Case Caseアクションの終わりを定義します。 Default Case Switchアクションに対する対象外ブロックを定義します。 End Default Case Default Caseアクションの終わりを定義します。 Loops アクション 概要 Loop Action 特定回数繰り返しを行います。 Loop Condition Action 条件を満たさなくなるまで繰り返しを行います。 For Each Action 要素数分繰り返しを行います。 Exit Loop Action 繰り返し処理を中断します。 End Loop Action Loop/Forアクションの終わりを定義します。 Wait アクション 概要 Wait Action 指定した時間（秒）処理を待機します。 Wait for File Action 指定したファイルが作成または削除されるまで処理を待機します。 Wait for HotKey Action 指定したキーが押下されるまで処理を待機します。 Wait for Process Action 指定したWindowsプロセスが実行または停止されるまで処理を待機します。 Wait for Service Action 指定したサービスが実行または停止されるまで処理を待機します。 Wait for Window Action 指定したウィンドウが任意の状態になるまで処理を待機します。 Wait for Image Action 指定した画像が表示または非表示になるまで処理を待機します。 Wait for Text on Screen (OCR) 画面をOCRでスキャンし特定の文言が取得できるまで処理を待機します。 Wait for Mouse Action マウスカーソルの状態が変化するまで処理を待機します。（例 砂時計が終わるまで） Wait for Window Content Action ウィンドウ要素を確認できるまで処理を待機します。 Wait for Web Page Content Action Webページ要素を確認できるまで処理を待機します。 Flow Control アクション 概要 Label Action Go Toアクションでジャンプするラベルを設定します。 Go To Action 指定のラベルにジャンプします。 Run Function Action 指定したファンクションを実行します。 Exit Function Action 現在のファンクションを終了します。 Stop Process Action プロセス（ロボット）を終了します。 Begin Exception Block Action 例外ブロックの開始を定義します。 End Exception Block Action 例外ブロックの終了を定義します。 Mouse and Keyboard アクション 概要 Block Input Action マウス及びキーボードによる入力をブロックします。 Get Mouse Position Action 現在のマウスの座標位置を取得します。 Move Mouse Action マウスを指定した座標に移動します。 Move Mouse to Image Action マウスを指定した画像の上に移動します。 Move Mouse to Text on Screen (OCR) 画面をOCRでスキャンし対象の文字の上にマウスを移動します。 Send Mouse Click Action 現在の位置でマウスをクリックします。 Send Keys Action &#43;&#43;a&#43;&#43;・&#43;&#43;1&#43;&#43;・&#43;&#43;ctrl&#43;s&#43;&#43; など指定したキーを送信します。 Press/Release Key Action &#43;&#43;ctrl&#43;&#43; &#43;&#43;alt&#43;&#43; &#43;&#43;win&#43;&#43; &#43;&#43;shift&#43;&#43;キーの状態を設定します。 Set Key State Action &#43;&#43;caps-lock&#43;&#43; &#43;&#43;num-lock&#43;&#43; &#43;&#43;scroll-lock&#43;&#43;キーの状態を設定します。 Message Boxes アクション 概要 Display Message Action メッセージを表示します。 Display Custom Dialog Action カスタマイズ可能なダイアログを表示します。 Display Notification Action 通知ポップアップを表示します。 Display Input Dialog Action 簡単な入力を行うダイアログを表示します。 Display Select Date Dialog 日付入力を行うダイアログを表示します。 Display Select From List Dialog Action リスト選択を行うダイアログを表示します。 Display Select File Dialog Action ファイル選択を行うダイアログを表示します。 Display Select Folder Dialog Action フォルダ選択を行うダイアログを表示します。 Files アクション 概要 Get Files in Folder Action フォルダ内のファイル一覧を取得します。 Copy File(s) Action ファイルのコピーを行います。 Move File(s) Action ファイルの移動を行います。 Delete File(s) Action ファイルの削除を行います。 Rename File(s) Action ファイルの名前変更を行います。 Read Text from File Action テキストファイルを読み込みます。 Write Text to File Action テキストファイルに書き出します。 Read From CSV File Action CSVファイルを読み込みます。 Write to CSV File Action CSVファイルを書き出します。 Get FilePath Part Action 指定したファイルパスからルートパス・拡張子などを取得します。 Get Temporary File Action 一時ファイルを作成します。 Folders アクション 概要 Get Subfolders in Folder Action フォルダ内のサブフォルダ一覧を取得します。 Create Folder Action フォルダを作成します。 Delete Folder Action フォルダを削除します。 Empty Folder Action フォルダを空にします。 Copy Folder Action フォルダをコピーします。 Move Folder Action フォルダを移動します。 Rename Folder Action フォルダの名前を変更します。 Get Special Folder Action デスクトップなどのフォルダのパスを取得します。 Compression アクション 概要 Zip Files Action ZIPファイルを作成します。 Unzip Files Action ZIPファイルを展開します。 Clipboard アクション 概要 Get Clipboard Text Action クリップボードのテキスト値を取得します。 Set Clipboard Text Action クリップボードにテキスト値を設定します。 Clear Clipboard Contents Action クリップボードの中身をクリアにします。 UI and Windows アクション 概要 Use Desktop Action デスクトップおよびタスクバーに関する操作を実行します。 Select Tab in Window Action 対象ウィンドウからタブの選択を行います。 Click Element in Window Action 対象ウィンドウにある項目をクリックします。 Select Menu Option in Window Action メニューバーの項目を選択します。（ファイル、編集など） Drag and Drop Element in Window Action ウィンドウの要素をドラッグアンドドロップします。 Expand / Collapse Tree Node in Window Action ツリーノードの展開・縮小を行います。 Windows アクション 概要 Get Window Action 操作を行うためにウィンドウを取得します。 Focus Window Action ウィンドウにフォーカスを設定します。 Set Window State Action ウィンドウの状態（最大化、最小化）を設定します。 Set Window Visibility Action ウィンドウの表示・非表示を設定します。 Move Window Action ウィンドウの位置を変更します。 Resize Window Action ウィンドウのサイズを変更します。 Close Window Action ウィンドウを閉じます。 Form Filling アクション 概要 Focus Text Field in Window Action 入力項目にフォーカスを設定します。 Populate Text Field in Window Action 指定した入力項目に値を入力します。 Press Button in Window Action ボタンをクリックします。 Select Radio Button in Window Action ラジオボタンから選択を行います。 Set Checkbox State in Window Action チェックボックスのオン・オフを設定します。 Set Dropdown List Value in Window Action 選択リストから値を選択します。 Data Extraction アクション 概要 Get Details of Window Action 画面のタイトル、位置などを取得します。 Get Details of Element in Window Action 指定した項目の値を取得します。 Get Selected Checkboxes in Window Action チェックボックスの状態を取得します。 Get Selected Radiobutton in Window Action ラジオボタンの状態を取得します。 Extract Data from Window Action 値・リスト・テーブル形式で画面からデータを抽出します。 Web Automation アクション 概要 Launch New Internet Explorer Action Internet ExplorerまたはAutomation Browserを起動します。 Launch New Firefox Mozilla FireFoxを起動します。 Launch New Chrome Google Chromeを起動します。 Create New Tab 新たにタブを作成します。 Go to Web Page Action 指定したURLにアクセスします。 Click Link on Web Page Action Webページのリンクまたは要素をクリックします。 Click Download Link on Web Page Action ファイルのダウンロードを行います。 Hover Mouse over element on Web Page Action Webページ内の指定した要素にマウスを移動します。 Close Web Browser Webブラウザを終了します。 Execute Javascript Function On Web Webページに対し指定したJavascriptを実行します。 Web Forms アクション 概要 Focus Text Field on Web Page Action 入力項目にフォーカスを設定します。 Populate Text Field on Web Page Action 指定した入力項目に値を入力します。 Set Checkbox State on Web Page Action チェックボックスのオン・オフを設定します。 Select Radio Button on Web Page Action ラジオボタンから選択を行います。 Set DropDown List Value on Web Page Action 選択リストから値を選択します。 Press Button on Web Page Action ボタンをクリックします。 Web Data Extraction アクション 概要 Extract Data from Web Page Action Webページからデータを抽出します。 Get Details of Web Page Action Webページのタイトル、URLなどを取得します。 Get Details of Element on Web Page Action 指定した項目の値を取得します。 Take Screenshot of Web Page Action Webページをスクリーンショットし保存します。 Direct Web Access アクション 概要 Download from Web Action 指定したWebページをダウンロードします。 Invoke Web Service Action WebAPIなどのWebサービスにGet/Postでリクエスト要求します。 FTP アクション 概要 Open FTP Connection Action FTPサーバーへの接続を行います。 Open Secure FTP Connection Action SFTPサーバーへの接続を行います。 Close FTP Connection Action FTPサーバーの接続を終了します。 List FTP Directory Action 作業ディレクトリのファイル一覧を取得します。 Change Working Directory Action 作業ディレクトリを変更します。 Download File(s) from FTP Action FTPサーバーからファイルをダウンロードします。 Download Folder(s) from FTP Action FTPサーバーからフォルダをダウンロードします。 Upload File(s) to FTP Action FTPサーバーへファイルをアップロードします。 Upload Folder(s) to FTP Action FTPサーバーへフォルダをアップロードします。 Delete FTP File Action FTPサーバーのファイルを削除します。 Rename FTP File Action FTPサーバーのファイル名を変更します。 Create FTP Directory Action FTPサーバーにディレクトリを作成します。 Delete FTP Directory Action FTPサーバーのディレクトリを削除します。 Synchronize FTP Directory Action FTPサーバーとローカルの同期を行います。 Invoke FTP Command Action FTPサーバーに対しコマンドを実行します。 Email アクション 概要 Retrieve Emails Action IMAPサーバーからメールを取得します。 Process Emails Action 取得したメールに対し移動や削除などの処理を行います。 Send Email Action メールの送信を行います。 Exchange アクション 概要 Connect to Exchange Server Exchangeサーバーに接続を行います。 Retrieve Exchange Email Messages Exchangeサーバーからメールを取得します。 Process Exchange Email Messages 取得したメールに対し移動や削除などの処理を行います。 Send Exchange Email Messages Exchangeサーバーからメールの送信を行います。 Cmd Session アクション 概要 Open Cmd Session コマンドラインセッションを開始します。 Close Cmd Session コマンドラインセッションを終了します。 Write to Cmd Session コマンドを送信します。 Read from Cmd Session 出力されたコマンドを読み込みます。 Wait for Text on Cmd Session 特定のテキストが出力されるまで待機します。 Database アクション 概要 Open SQL Connection データベースへの接続を行います。 Execute SQL Statement Action SQLを実行します。 Close SQL Connection データベースへの接続を終了します。 Excel アクション 概要 Launch Excel Action EXCELを起動します。 Attach to Running Excel Action 起動済みのEXCELを操作します。 Save Excel EXCELを保存します。 Close Excel Action EXCELを終了します。 Read from Excel Action 特定のセルまたは範囲からデータを読み込みます。 Write to Excel Action セルにデータを書き込みます。 Add New Worksheet Action シートを追加します。 Set Active Worksheet Action 選択しているシートを変更します。 Get First Free Column/Row Action 空の列および空の行の位置を取得します。 Advanced Excel アクション 概要 Run Excel Macro マクロを実行します。 Get Active Excel Worksheet Action 選択されたシートの名前およびインデックスを取得します。 Get All Excel Worksheets Action 全てのシートの情報を取得します。 Delete Excel Worksheet Action シートを削除します。 Rename Excel Worksheet Action シートの名前を変更します。 Activate Cell in Excel Worksheet Action 特定のセルを選択します。 Select Cells in Excel Worksheet Action 指定したセル範囲を選択します。 Get Selected Cell Range From Excel Worksheet Action 選択されたセル範囲の情報を取得します。 Copy Cells in Exel Worksheet Action 特定のセルまたは範囲のコピーを行います。 Paste Cells to Excel Worksheet Action 特定のセルまたは範囲へ貼り付けを行います。 Insert Row in Excel Worksheet Action 行の挿入を行います。 Delete Row from Excel Worksheet Action 行の削除を行います。 Insert Column to Excel Worksheet Action 列の挿入を行います。 Delete Column from Excel Worksheet Action 列の削除を行います。 Get First Free Row on Column from Excel Worksheet Action 指定した列の空の行の位置を取得します。 Outlook アクション 概要 Launch Outlook Action Outlookを起動します。 Retrieve Email Messages From Outlook Action Outlookを使用し、メールを取得します。 Send Email Through Outlook Action Outlookからメールを送信します。 Process Email Messages in Outlook Action 取得したメールを処理します。 Save Outlook Email Messages Action 対象アカウントのメールを保存します。 Respond To Outlook Email Message Action Outlookを使用し、メールの返信・転送を行います。 Close Outlook Action Outlookを終了します。 OCR アクション 概要 Create Tesseract OCR Engine Google Tesseract OCRエンジンを定義します。 Create MODI OCR Engine Microsoft MODI OCRエンジンを定義します。 Extract Text With OCR OCRエンジンを使用し、OCR処理を行います。 Services アクション 概要 Start Service Action サービスを開始します。 Stop Service Action サービスを終了します。 Pause Service Action サービスを一時停止します。 Resume Service Action サービスを再起動します。 WinAutomation Actions アクション 概要 Start Process Action 別にプロセス（ロボット）を起動します。 Get Command Line Arguments Action コマンドで起動された際の引数を取得します。 Get Process&amp;rsquo; Path Action プロセス（ロボット）のパスを取得します。 Log Message Action WinAutomationのログを記録します。 Get Last Exception Action プロセス（ロボット）実行中に発生した最後の例外を取得します。 Text アクション 概要 Get Text Length Action テキストの文字数を取得します。 Append Line to Text Action テキストに新たな行を追加します。 Get Subtext Action 文字から一部分を取得します。（例 2文字目以降） Pad Text Action 指定した文字数になるように文字を埋めます。（例 1 -&amp;gt; 0001） Trim Text Action 文字の前後のスペースを取り除きます。 Change Text Case Action 大文字、小文字を変更します。 Convert Text to Number Action テキスト型を数値型に変換します。 Convert Number to Text Action 数値型をテキスト型に変換します。 Convert Text to DateTime Action テキスト型を日付型に変換します。 Convert DateTime to Text Action 日付型をテキスト型に変換します。 Create Random Text Action ランダムな文字列を生成します。 Join Text Action リスト型の文字列を結合します。 Split Text Action 文字列内の特定の文字を区切りとしてテキストをリスト化します。 Parse Text Action 正規表現を使用し、対象の位置情報を取得します。 Replace Text Action 文字の置き換えを行います。 Escape Text for Regular Expression Action \、*、?などの文字をエスケープします。 DateTime アクション 概要 Get Current Date and Time Action コンピュータの現在日時を取得します。 Add to DateTime Action 日付または時刻に対し、加算・減算を行います。 Subtract Dates Action 2つの日時の差を取得します。 XML アクション 概要 Read XML from File Action XMLファイルの読み込みをお粉ます。 Write XML to File Action XMLファイルへ書き込みを行います。 Execute XPath Expression Action XPathクエリを用いてXMLから値を取得します。 Get XML Element Attribute Action アトリビュート（属性）値を取得します。 Set XML Element Attribute Action アトリビュート（属性）値の設定を行います。 Remove XML Element Attribute Action アトリビュート（属性）の削除を行います。 Get XML Element Value Action エレメント（要素）値の取得を行います。 Set XML Element Value Action エレメント（要素）値の設定を行います。 Insert XML Element Action エレメント（要素）を挿入します。 Remove XML Element Action エレメント（要素）を削除します。 Variables アクション 概要 Set Variable Action 変数を定義し、値を設定します。 Increase Variable Action 指定した値分だけ加算します。 Decrease Variable Action 指定した値分だけ減算します。 Truncate Number Action 指定した小数点位置で四捨五入、切捨、切上を行います。 Generate Random Number Action 乱数を生成します。 Create New List Action 新たにリストを作成します。 Get Items Count Action リストの件数を取得します。 Clear List Action リストの内容をクリアにします。 Add Item to List Action リストに値を追加します。 Remove Item from List Action リストから値を削除します。 Sort List Action リストの並び替えを行います。 Shuffle List Action リストをシャッフルします。 Merge Lists 2つのリストを結合します。 Reverse List Action 並び順を反転します。 Remove Duplicate Items from List Action 重複した値を削除します。 Find Common List Items Action 2つのリストから共通の値を取得します。 Subtract Lists Action 2つのリストを比較し、List2にない値を取得します。 Retrieve DataTable Column into List Action DataTableから特定の列を抽出、リストを作成します。 Create New Custom Object カスタムオブジェクトを作成します。 Add Property To Custom Object カスタムオブジェクトにプロパティを追加します。 Convert Json to Custom Object Jsonファイルをカスタムオブジェクトに変換します。 Convert Custom Object to Json カスタムオブジェクトをJson形式に変換します。 PDF アクション 概要 Extract Text From PDF PDFファイルからテキストを抽出します。 Extract Images From PDF Action PDFファイルから画像を抽出します。 Extract text From PDF With OCR PDFファイルにOCRを行い、テキストを抽出します。 Extract PDF Pages to New PDF PDFファイルからページを抽出し、新たなPDFファイルを作成します。 Merge PDF Files 複数にPDFファイルを結合します。 Synchronization アクション 概要 Lock Handle Action EXCELの編集待ちなど、指定されたハンドルがロック可能になるまで待機します。 Release Handle Action ロックしたハンドルを開放します。]",
        url: "http://A181102:2015/action/"
    },
    
    {
        title: "サンプル",
        content: "[ダウンロードを行い、wajファイルのインポートを行ってください。 title: &amp;ldquo;1&amp;rdquo; 基本操作 変数の＋－×÷&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download 式を用いて、数値、変数の四則演算を行うサンプルです。 型のプロパティ&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download ファイル、日付型を用いたプロパティのサンプルです。 ファンクションの使い方&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download ファンクションを使用したサンプルです。 条件分岐 If&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download If文を使用し処理を分岐するサンプルです。 条件分岐 Switch&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download Switch文を使用し処理を分岐するサンプルです。 偶数、奇数の判定&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download 偶数、奇数の判定を行い処理を分岐するサンプルです。 繰り返し処理 Loop&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download Loopによる回数が決まった繰り返し処理のサンプルです。 繰り返し処理 Loop Condition&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download Loop Conditionによる条件が存在する繰り返し処理のサンプルです。 繰り返し処理 For Each&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download For Eachによるリストの繰り返し処理のサンプルです。 キーボード操作&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download キーボードを使用して操作を行うサンプルです。 マウス操作&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download マウスを使用して操作を行うサンプルです。 ファイルトリガー ファイルトリガーの対象ファイルを処理する&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download ファイルトリガーを使用したサンプルです。 日付操作 日付の増減&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download 日付の増減を行うサンプルです。 西暦を和暦に変換する&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download 日付の増減を行うサンプルです。 文字列操作 文字の結合&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download 文字列同士の結合を行うサンプルです。 文字列からn文字目の文字を取得&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download 文字列の任意の位置から文字を取得するサンプルです。 文字列からスペースを除去&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download 文字列からスペースを除去するサンプルです。 特定の文字列を置き換える（消す）&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download 文字列から特定の文字を置き換える（消す）サンプルです。 全角文字・半角文字の変換&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download 全角を半角に、半角を全角に変換するサンプルです。 数値操作 四捨五入、切り捨て、切り上げ&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download 数値の四捨五入、切り捨て、切り上げを行うサンプルです。 カスタムオブジェクト操作 カスタムオブジェクトの操作&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download カスタムオブジェクトの使用例です。 ファイル操作 ファイル名順に処理&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download ファイル名順に処理を行うサンプルです。 ファイル名に日時を設定する&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download ファイル名に実行日時を付与するサンプルです。 ファイル名に連番を設定する&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download ファイル名に連番を付与するサンプルです。 メール操作 複数ファイルをZIP化しメール送信&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download 複数ファイルをZIP圧縮し、メールに添付した状態で送付するサンプルです。 Webページ操作 Webページを表示し、ページ遷移する&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download Webページを表示し、URL指定、クリックの2パターンでページ遷移するサンプルです。 複数Webページの検索結果を取得する&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download 複数Webページにわたってデータを抽出するサンプルです。 PDF操作 PDFファイルを作成する&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download PDFプリンターを用いてPDFを作成するサンプルです。 PDFファイルを結合する&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download 複数のPDFファイルを結合するサンプルです。 EXCEL操作 EXCELでデータの読み書き&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download EXCELで単純なEXCELデータの読み書きを行うサンプルです。 EXCELに関数を設定する&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download EXCEL関数を設定するサンプルです。 EXCELの複数行を処理する&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download EXCELで複数行データを読み取り、別シートに転記するサンプルです。 EXCELのセルに色を設定する&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download EXCELのセルに塗りつぶしを設定するサンプルです。 EXCELで罫線を引く&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download EXCELに罫線を引くサンプルです。 EXCELで印刷範囲を設定し印刷を行う&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download EXCELで印刷範囲を設定し、印刷を行うサンプルです。 複数EXCELの同時操作&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download 複数のEXCELを起動し、それぞれ操作するサンプルです。 ヘッダ位置が可変のEXCELデータを処理&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download ヘッダ位置をプロセス内で判断し、処理を行うサンプルです。 Word操作 Wordを操作する&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download Wordの操作を行うサンプルです。 Wordで文字の置き換えを行う&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download Wordを使用し、文字の置き換えを行うサンプルです。 例外処理 エラーの判定&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download 例外発生時にエラーフラグを設定し、判定を行うサンプルです。 プロセス全体で共通した例外処理&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download プロセスのどこでエラーになっても共通したエラー処理を行うサンプルです。 WebAPI WebAPIを使用する&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download WebAPIを実行し、結果を取得するサンプルです。 同時実行制御 同時実行制御をかける&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download 同時実行制御を設定し、プロセスが終了するまで実行を待機させるサンプルです。 実用サンプル ChatworkAPIの利用&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download Chatwork APIを使用し、メッセージを投稿するサンプルです。 SalesforceAPIの利用&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download Salesforce APIを使用し、データを投稿するサンプルです。 QRコードの作成&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download Webサービスを使用し、QRコードを作成するサンプルです。 DocuWorksでOCRを行う&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Download DocuWorksを使用し、OCRを行うサンプルです。]",
        url: "http://A181102:2015/sample/"
    },
    
    {
        title: "FAQ",
        content: "[]",
        url: "http://A181102:2015/faq/"
    },
    
    {
        title: "トラブルシューティング",
        content: "[トリガーが実行されない]",
        url: "http://A181102:2015/truble/"
    },
    
];
